// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// getPIP
IntegerVector getPIP(IntegerVector seeds, IntegerVector scans, NumericVector mzs, IntegerVector clu, double mztol, int gap);
RcppExport SEXP KPIC2_getPIP(SEXP seedsSEXP, SEXP scansSEXP, SEXP mzsSEXP, SEXP cluSEXP, SEXP mztolSEXP, SEXP gapSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type seeds(seedsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type scans(scansSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mzs(mzsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clu(cluSEXP);
    Rcpp::traits::input_parameter< double >::type mztol(mztolSEXP);
    Rcpp::traits::input_parameter< int >::type gap(gapSEXP);
    rcpp_result_gen = Rcpp::wrap(getPIP(seeds, scans, mzs, clu, mztol, gap));
    return rcpp_result_gen;
END_RCPP
}
// getPIP_kmeans
IntegerVector getPIP_kmeans(IntegerVector seeds, IntegerVector scans, NumericVector mzs, NumericVector ints, IntegerVector clu, double mztol, int gap, int min_width, int max_width, double alpha);
RcppExport SEXP KPIC2_getPIP_kmeans(SEXP seedsSEXP, SEXP scansSEXP, SEXP mzsSEXP, SEXP intsSEXP, SEXP cluSEXP, SEXP mztolSEXP, SEXP gapSEXP, SEXP min_widthSEXP, SEXP max_widthSEXP, SEXP alphaSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< IntegerVector >::type seeds(seedsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type scans(scansSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type mzs(mzsSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type ints(intsSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type clu(cluSEXP);
    Rcpp::traits::input_parameter< double >::type mztol(mztolSEXP);
    Rcpp::traits::input_parameter< int >::type gap(gapSEXP);
    Rcpp::traits::input_parameter< int >::type min_width(min_widthSEXP);
    Rcpp::traits::input_parameter< int >::type max_width(max_widthSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    rcpp_result_gen = Rcpp::wrap(getPIP_kmeans(seeds, scans, mzs, ints, clu, mztol, gap, min_width, max_width, alpha));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"KPIC2_getPIP", (DL_FUNC) &KPIC2_getPIP, 6},
    {"KPIC2_getPIP_kmeans", (DL_FUNC) &KPIC2_getPIP_kmeans, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_KPIC2(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
